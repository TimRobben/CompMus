

```{r}
blade <-
  get_playlist_audio_features("spotify", "5zry3nbl6HlmZSvQM5Wj2G")
dune <-
  get_playlist_audio_features("spotify", "6VKFAXYduw7C2xsSUu1uud")
interstellar <-
  get_playlist_audio_features("spotify", "6ZZhtlECgrvSHJKhMk87Lx")
gladiator <-
  get_playlist_audio_features("spotify", "3M7MxOZaWedSI0grFTtlUh")
batman <-
  get_playlist_audio_features("spotify", "1LgxEmNRXXHBZeA7bjpGmN")
inception <-
  get_playlist_audio_features("spotify", "47scgDlvgo4csEwo0TWK2w")
starwars <-
  get_playlist_audio_features("spotify", "0E3QqiKwfCkNpsPZOZznBG")
jurassic <-
  get_playlist_audio_features("spotify", "59I4bUwLJIKftzdnxDrRyk")
harryp <-
  get_playlist_audio_features("spotify", "4qbKjUmKVBoMaOa0EjJI4I")
indianaj<-
  get_playlist_audio_features("spotify", "6fwHcijyb09JidkVEY8IiQ")

hans_john <-
  bind_rows(
    dune %>% mutate(playlist = "Dune Hans Zimmer"),
    interstellar %>% mutate(playlist = "Interstellar Hans Zimmer"),
    inception %>% mutate(playlist = "Inception Hans Zimmer"),
    starwars %>% mutate(playlist = "Star Wars John Williams"),
    harryp %>% mutate(playlist = "Harry Potter John Williams"),
    indianaj %>% mutate(playlist = "Indiana Jones John Williams"),
  )

hans_john_features <-
  hans_john %>%  # For your portfolio, change this to the name of your corpus.
  add_audio_analysis() %>%
  mutate(
    playlist = factor(playlist),
    segments = map2(segments, key, compmus_c_transpose),
    pitches =
      map(
        segments,
        compmus_summarise, pitches,
        method = "mean", norm = "manhattan"
      ),
    timbre =
      map(
        segments,
        compmus_summarise, timbre,
        method = "mean",
      )
  ) %>%
  mutate(pitches = map(pitches, compmus_normalise, "clr")) %>%
  mutate_at(vars(pitches, timbre), map, bind_rows) %>%
  unnest(cols = c(pitches, timbre))

hans_john_recipe <-
  recipe(
    playlist ~
      danceability +
      energy +
      loudness +
      speechiness +
      acousticness +
      instrumentalness +
      liveness +
      valence +
      tempo +
      duration +
      C + `C#|Db` + D + `D#|Eb` +
      E + `F` + `F#|Gb` + G +
      `G#|Ab` + A + `A#|Bb` + B +
      c01 + c02 + c03 + c04 + c05 + c06 +
      c07 + c08 + c09 + c10 + c11 + c12,
    data = hans_john_features,          # Use the same name as the previous block.
  ) %>%
  step_center(all_predictors()) %>%
  step_scale(all_predictors())      # Converts to z-scores.
  # step_range(all_predictors())    # Sets range to [0, 1].

hans_john_cv <- hans_john_features %>% vfold_cv(5)

forest_model <-
  rand_forest() %>%
  set_mode("classification") %>%
  set_engine("ranger", importance = "impurity")
hans_john_forest <-
  workflow() %>%
  add_recipe(hans_john_recipe) %>%
  add_model(forest_model) %>%
  fit_resamples(
    hans_john_cv,
    control = control_resamples(save_pred = TRUE)
  )


hans_john_features %>%
  ggplot(aes(x = c01, y = c02, colour = playlist, size = energy)) +
  geom_point(alpha = 0.8) +
  scale_color_viridis_d() +
  labs(
    x = "Timbre Component 1",
    y = "Timbre Component 2",
    size = "Energy",
    colour = "Playlist"
  )
```
